@using RazorLight
@using Generator.Template;
@inherits TemplatePage<ViewInfoWapper>
@{
    DisableEncoding = true;
}

@if (Model.TableInfo.PrimaryKey == null) { goto 无主键; }
/// <summary>
/// 获取指定的@(Model.TableInfo.Name)实体对象
/// </summary>
@Model.MakeMethodParamComment(Model.TableInfo.PrimaryKey)
/// <returns>@(Model.TableInfo.Name)实体对象</returns>
public static @(Model.TableInfo.Name) GetModel(@Model.MakeMethodParam(Model.TableInfo.PrimaryKey))
{
    var sql = "SELECT * FROM @Model.MakeTableName(Model.TableInfo.Name) WHERE @Model.MakeSQLWhere(Model.TableInfo.PrimaryKey)";
    @(Model.TableInfo.Name) ret = null;
    using (var conn = GetOpenConnection())
        ret = conn.QueryFirstOrDefault<@(Model.TableInfo.Name)>(sql, new { @Model.MakeSQLParamValueList(Model.TableInfo.PrimaryKey) });

    return ret;
}

@{ 无主键: }
/// <summary>
/// 获取指定的@(Model.TableInfo.Name)实体对象
/// </summary>
public static @(Model.TableInfo.Name) GetModel(Expression<Func<@(Model.TableInfo.Name), bool>> predicate)
{
	var parser = new PredicateParser();
    var where_str = parser.Parse(predicate);
			
    var sql = new StringBuilder();
    sql.Append("SELECT * FROM @Model.MakeTableName(Model.TableInfo.Name)");
    if (!string.IsNullOrEmpty(where_str))
		sql.Append(" WHERE " + where_str);
    @(Model.TableInfo.Name) ret = null;
    using (var conn = GetOpenConnection())
        ret = conn.QueryFirstOrDefault<@(Model.TableInfo.Name)>(sql.ToString());
			
    return ret;
}

/// <summary>
/// 批量获取@(Model.TableInfo.Name)实体对象
/// </summary>
public static List<@(Model.TableInfo.Name)> GetList(Expression<Func<@(Model.TableInfo.Name), bool>> predicate = null, params @(Model.TableInfo.Name)Column[] orderBy)
{
	var where_str = string.Empty;
	if (predicate != null)
	{
		var parser = new PredicateParser();
		where_str = parser.Parse(predicate);
	}

    var sql = new StringBuilder();
    sql.Append("SELECT * FROM @Model.MakeTableName(Model.TableInfo.Name)");
    if (where_str != string.Empty)
		sql.Append(" WHERE " + where_str);
	if (orderBy != null && orderBy.Length > 0)
        sql.Append(" ORDER BY " + string.Join(", ", orderBy.Select(p => $"{p.Name} {p.Direction}")));

	List<@(Model.TableInfo.Name)> ret = null;
    using (var conn = GetOpenConnection())
        ret = conn.Query<@(Model.TableInfo.Name)>(sql.ToString()).ToList();
			
    return ret;
}