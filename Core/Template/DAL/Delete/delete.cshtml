@using RazorLight
@using Generator.Template;
@inherits TemplatePage<ViewInfoWapper>
@{
    DisableEncoding = true;
}

        @if (Model.TableInfo.PrimaryKey == null) { goto 无主键; }
        /// <summary>
        /// 删除指定的@(Model.TableInfo.Name)数据记录
        /// </summary>
        @Model.MakeMethodParamComment(Model.TableInfo.PrimaryKey)
        /// <returns>是否成功，true为成功</returns>
        public static bool Delete(@Model.MakeMethodParam(Model.TableInfo.PrimaryKey), IDbTransaction transaction = null)
        {
            var sql = "DELETE FROM @Model.MakeTableName(Model.TableInfo.Name) WHERE @Model.MakeSQLWhere(Model.TableInfo.PrimaryKey)";
            var ret = false;
            using (var conn = GetOpenConnection())
                ret = conn.Execute(sql, new { @Model.MakeSQLParamValueList(Model.TableInfo.PrimaryKey) }, transaction) > 0;

            return ret;
        }

        /// <summary>
        /// 批量删除指定的@(Model.TableInfo.Name)数据记录
        /// </summary>
        /// <param name="Ids">@(Model.TableInfo.Name + "实体对象的")id列表</param>
        /// <returns>是否成功，true为成功</returns>
        public static bool Delete(List<@Model.TableInfo.PrimaryKey.DbType> Ids, IDbTransaction transaction = null)
        {
            var sql = "DELETE FROM @Model.MakeTableName(Model.TableInfo.Name) WHERE @Model.TableInfo.PrimaryKey.Name IN @@ids";
            var ret = false;
            using (var conn = GetOpenConnection())
                ret = conn.Execute(sql, new { @@ids=Ids }, transaction) > 0;

            return ret;
        }

        @{ 无主键: }
         /// <summary>
        /// 删除指定的@(Model.TableInfo.Name)数据记录
        /// </summary>
        public static bool Delete(Expression<Func<@Model.TableInfo.Name, bool>> predicate, IDbTransaction transaction = null)
        {
            var parser = new PredicateParser();
	        var where_str = parser.Parse(predicate);
			
            var sql = new StringBuilder();
            sql.Append("DELETE FROM @Model.MakeTableName(Model.TableInfo.Name)");
            if (!string.IsNullOrEmpty(where_str))
	            sql.Append(" WHERE " + where_str);
            var ret = false;
            using (var conn = GetOpenConnection())
                ret = conn.Execute(sql.ToString(), transaction) > 0;

            return ret;
        }
