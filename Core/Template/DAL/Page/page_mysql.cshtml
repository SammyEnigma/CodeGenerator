@using RazorLight
@using Generator.Template;
@using Generator.Common;
@inherits TemplatePage<ViewInfoWapper>
@{
    DisableEncoding = true;
}
		/// <summary>
        /// 此分页用于有数值型主键的table,如果表数据庞大最好手写一个高效的分页方式
        ///</summary>
		public static PageDataView<@(Model.TableInfo.Name)> GetPage(Expression<Func<@(Model.TableInfo.Name), bool>> predicate = null,int pageSize = 20,int currentPage = 1,@(Model.TableInfo.Name)Column orderBy = null,params @(Model.TableInfo.Name)Column[] columns)
        {
			var where_str = string.Empty;
			if (predicate != null)
			{
				var parser = new PredicateParser();
				where_str = parser.Parse(predicate);
			}

			var orderby_str = string.Empty;
            if (orderBy != null)
            {
                orderby_str = $"`{orderBy.Name}` {orderBy.Asc}";
            }

            var column_str = "*";
            if (columns != null && columns.Length > 0)
            {
                column_str = string.Join(", ", columns.Select(p => $"`{p.Name}`"));
            }

			return Paged<@(Model.TableInfo.Name)>("`@(Model.TableInfo.Name)`",where_str,orderby_str,column_str,pageSize,currentPage,"`@(Model.TableInfo.PrimaryKey)`");
        }

		/// <summary>
		/// 分页获取数据列表
		/// </summary>
		public static PageDataView<@(Model.TableInfo.Name)> GetPage(Expression<Func<@(Model.TableInfo.Name), bool>> predicate,int pageSize,int currentPage,IList<@(Model.TableInfo.Name)Column> orderBy,params @(Model.TableInfo.Name)Column[] columns)
        {
			var where_str = string.Empty;
			if (predicate != null)
			{
				var parser = new PredicateParser();
				where_str = parser.Parse(predicate);
			}

			var orderby_str = string.Empty;
            if (orderBy != null && orderBy.Count > 0)
            {
                orderby_str = string.Join(", ", orderBy.Select(p => $"`{p.Name}` {p.Asc}"));
            }

            var column_str = "*";
            if (columns != null && columns.Length > 0)
            {
                column_str = string.Join(", ", columns.Select(p => $"`{p.Name}`"));
            }

			return Paged<@(Model.TableInfo.Name)>("`@(Model.TableInfo.Name)`",where_str,orderby_str,column_str,pageSize,currentPage,"`@(Model.TableInfo.PrimaryKey)`");
        }
