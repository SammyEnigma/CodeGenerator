		/// <summary>
        /// 获取{0}列表
        /// </summary>
        public static List<{0}> LeftJoin(
			Expression<Func<{1}, {2}, bool>> on, 
			Expression<Func<{1}, {2}, bool>> predicate = null, 
			IColumn orderBy = null, 
			params IColumn[] columns)
        {{
			if (on == null)
                throw new ArgumentNullException("on");

            var on_str = string.Empty;
			var parser = new PredicateParser();
			on_str = parser.Parse(on);

            var where_str = string.Empty;
			if (predicate != null)
			{{
				parser.Reset();
				where_str = parser.Parse(predicate);
			}}

			var orderby_str = string.Empty;
            if (orderBy != null)
            {{
                orderby_str = $"[{{orderBy.Table}}].[{{orderBy.Name}}] {{orderBy.Asc}}";
            }}

            var column_str = "[{1}].*, [{2}].*";
            if (columns != null && columns.Length > 0)
            {{
                column_str = string.Join(", ", columns.Select(p => $"[{{p.Table}}].[{{p.Name}}]"));
            }}

			var sql = new StringBuilder();
			sql.Append($"SELECT {{column_str}} FROM [{1}] LEFT JOIN [{2}] ");
            sql.Append("ON " + on_str);
            if (where_str != string.Empty)
                sql.Append(" WHERE " + where_str);
			if (orderby_str != string.Empty)
                sql.Append(" ORDER BY " + orderby_str);

            List<{0}> ret = null;
            using (var conn = GetOpenConnection())
            {{
                ret = conn.Query<{0}>(sql.ToString()).ToList();
            }}

            return ret;
        }}

		/// <summary>
        /// 获取{0}列表
        /// </summary>
        public static List<{0}> LeftJoin(
			Expression<Func<{1}, {2}, bool>> on, 
			Expression<Func<{1}, {2}, bool>> predicate, 
			IList<IColumn> orderBy, 
			params IColumn[] columns)
        {{
			if (on == null)
                throw new ArgumentNullException("on");

            var on_str = string.Empty;
			var parser = new PredicateParser();
			on_str = parser.Parse(on);

            var where_str = string.Empty;
			if (predicate != null)
			{{
				parser.Reset();
				where_str = parser.Parse(predicate);
			}}

			var orderby_str = string.Empty;
            if (orderBy != null && orderBy.Count > 0)
            {{
                orderby_str = string.Join(", ", orderBy.Select(p => $"[{{p.Table}}].[{{p.Name}}] {{p.Asc}}"));
            }}

            var column_str = "[{1}].*, [{2}].*";
            if (columns != null && columns.Length > 0)
            {{
                column_str = string.Join(", ", columns.Select(p => $"[{{p.Table}}].[{{p.Name}}]"));
            }}

			var sql = new StringBuilder();
			sql.Append($"SELECT {{column_str}} FROM [{1}] LEFT JOIN [{2}] ");
            sql.Append("ON " + on_str);
            if (where_str != string.Empty)
                sql.Append(" WHERE " + where_str);
			if (orderby_str != string.Empty)
                sql.Append(" ORDER BY " + orderby_str);

            List<{0}> ret = null;
            using (var conn = GetOpenConnection())
            {{
                ret = conn.Query<{0}>(sql.ToString()).ToList();
            }}

            return ret;
        }}
