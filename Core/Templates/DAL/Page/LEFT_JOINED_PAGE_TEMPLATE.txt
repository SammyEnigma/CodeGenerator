		/// <summary>
		/// 分页获取LeftJoined数据列表
		/// </summary>
		public static PageDataView<{0}> GetLeftJoinedPage(
			Expression<Func<{1}, {2}, bool>> on, 
			Expression<Func<{1}, {2}, bool>> predicate = null, 
			int pageSize = 20, 
			int currentPage = 1, 
			IColumn orderBy = null, 
			params IColumn[] columns)
        {{
			if (on == null)
                throw new ArgumentNullException("on");

			var on_str = string.Empty;
			var parser = new PredicateParser();
			on_str = parser.Parse(on);

            var where_str = string.Empty;
			if (predicate != null)
			{{
				parser.Reset();
				where_str = parser.Parse(predicate);
			}}

			var orderby_str = string.Empty;
            if (orderBy != null)
            {{
                orderby_str = $"[{{orderBy.Table}}].[{{orderBy.Name}}] {{orderBy.Asc}}";
            }}

            var column_str = "*";
            if (columns != null && columns.Length > 0)
            {{
                column_str = string.Join(", ", columns.Select(p => $"[{{p.Table}}].[{{p.Name}}]"));
            }}

			return JoinPaged(
					1, 
					on_str, 
					where_str, 
					orderby_str, 
					column_str, 
					pageSize, 
					currentPage);
        }}

		/// <summary>
		/// 分页获取LeftJoined数据列表
		/// </summary>
		public static PageDataView<{0}> GetLeftJoinedPage(
			Expression<Func<{1}, {2}, bool>> on, 
			Expression<Func<{1}, {2}, bool>> predicate, 
			int pageSize, 
			int currentPage, 
			IList<IColumn> orderBy, 
			params IColumn[] columns)
        {{
			if (on == null)
                throw new ArgumentNullException("on");

			var on_str = string.Empty;
			var parser = new PredicateParser();
			on_str = parser.Parse(on);

            var where_str = string.Empty;
			if (predicate != null)
			{{
				parser.Reset();
				where_str = parser.Parse(predicate);
			}}

			var orderby_str = string.Empty;
            if (orderBy != null && orderBy.Count > 0)
            {{
                orderby_str = string.Join(", ", orderBy.Select(p => $"[{{p.Table}}].[{{p.Name}}] {{p.Asc}}"));
            }}

            var column_str = "*";
            if (columns != null && columns.Length > 0)
            {{
                column_str = string.Join(", ", columns.Select(p => $"[{{p.Table}}].[{{p.Name}}]"));
            }}

			return JoinPaged(
					1, 
					on_str, 
					where_str, 
					orderby_str, 
					column_str, 
					pageSize, 
					currentPage);
        }}
